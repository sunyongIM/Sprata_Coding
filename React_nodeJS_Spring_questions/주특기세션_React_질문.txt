https://us02web.zoom.us/rec/play/3NY01MOAbxySTHMlYnTMdWxofsod-xtNnJs8AyEZaEctzAcmZD4nXgITzTHMvm7Zl4N2VDjbq7lMC9vH.u5pR6TOodDfL67MX?continueMode=true&_x_zm_rtaid=h-Ha6I1ERC25AhfjLSpzrg.1651929376645.126bfe6712ee315e7abb3335e4c27bbc&_x_zm_rhtaid=566

1. 디자인 감각이 많이 중요한가?

 * 있으면 좋으나, 중요하지 않음 (디자인보다는 UI, UX의 합리성이 중요함)

2. 언어는 자바스크립트만 배우는지? 타입스크립트도 같이 배우는지?

 * 타입스크립트는 우대사항이지만, 자바스크립트는 필수사항이다
자바스크립트를 확실히 배우고 나서 타입스크립트를 공부하길 권장

3. 리액트로 만드는 프로젝트는 몇가지?

 * 미니, 클론, 실전

4. 리액트의 강점, 장점

 * 프론트엔드 3대장 - React, Vue, Angular 중 최근 Angular가 서비스 종료하기로 발표함
프레임워크나 라이브러리에 종속되지 않고 자바스크립트를 기준으로 완벽히 이해한 다음
프레임워크들은 무기로 사용할 수 있게 해야한다

리액트의 강점 - 페이스북이 만듦, 커다란 생태계를 가지고 있음

5. 프론트엔드 과정에서는 vue js 학습은 없나요 ?

 * 베이스가 자바스크립트이기에 따로 수업과정은 없다

6. React 말고도 Vue나 Angular가 있는 것으로 아는데 그 차이점이 궁금합니다.

 * React는 템플릿이 없다 (컴포넌트 베이스)

7. 신입 주니어 개발자로 취업했을 시 프론트 엔드 쪽에서 일 시키는 수준은 얼마나 될까요?

 * 회사 문화마다 다름, 실력에 따라 많이 갈림

8. 혹시 자바스크립트나 리액트 공부할 때 추천해 주실만한 책이 있을까요?

 * 깨우치다 시리즈 (HTML을 깨우치다, 자바스크립트르 깨우치다, 등등)
리액트와 같은 프레임워크는 변화가 빠르기에 책을 추천하지 않는다. 공식문서 보는 것 추천

9. 튜터님이 생각하시기에 백엔드와 비교해서, 프론트엔드 분야로 갔을때의 장점? 차이?가 있다면 뭐가 있을까요

 * 사용성에 대한 혁신을 할 수 있는 분야가 프론트엔드 (UX, UI)

10. 주특기 선택때 React를 선택해도 본인 목표가 풀스택 개발자라면 나중에 백엔드도 해야될텐데 프론트를 하고나서 백엔드 쪽을 시작하면 어려움이 클까요..?

 * 웹에 대해 이해가 있다면, 조금 더 수월 할 수 있음

11. next.js를 배울 수 있는지

 * next.js의 기능(서버 사이드 렌더링을 SPA에서 하는 것)을 React의 18버전에서 구현할 수 있게 됐기에 더 이상 next.js를 사용 할 필요가 없어짐
React는 HTML파일이 하나인 SPA(Single Page Application)이지만, Server component로 서버 사이드 렌더링이 가능하게 됨
SPA는 클리이언트 사이드 렌더링 방식이고 MPA(Multi Page Application - ex) python)는 서버 사이드 렌더링 방식이다

12. 프론트엔드 개발자로 근무하실 때 가장 고통스러운 순간은 어떨 때이신가요?

 * 주로 커뮤니케이션

13. 코딩테스트는 어느 정도로 준비해야 할까요?

 * 회사마다 다르고 역할과 목표가 다르기에 케바케이다

14. 알고리즘 이라는 말은 많이 들어봤지만, 개념이 정확히 와 닿지를 않아서 여쭤보는데, 정확히 어떤걸 말씀하시는건지 개념적인 부분을 여쭤 봐도 될까요??

 * 문제 해결을 할 때 어떤 방식으로 어떤 순서로 할 지 정하는 것

15. 프론트엔드 개발자는 git 관리를 어떻게 하시나요?

 * 프로젝트 단위로 리포지토리 만들고 브랜치를 잘 나눠서 쓴다

16. 코딩테스트는 따로 파이썬으로 하려는데 괜찮을까요?

 * 코딩테스트는 언어를 따로 정해주지는 않음, 해설강의의 언어를 사용하는 것이 좋다