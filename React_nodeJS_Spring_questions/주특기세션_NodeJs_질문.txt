https://us02web.zoom.us/rec/share/m6WWJV3tjufERm_FBJ5VaPmnqVjoXnwIqpzDn_rjBxt6qvhy4WetGu3iRs40mgLL.ltZ287FG7CuJGAco

1. 노드는 한국에서 시니어 개발자 수가 비교적 적다고 들었는데요, 좋은 시니어 사수가 몇 없는 환경에서 주니어 노드 개발자가 잘 성장 할 수 있나요?

 * 노드js는 이제 나온지 14년 된 언어라 시니어 개발자 수가 적긴하다
한국은 국비지원으로 java교육이 많아서 시니어 개발자의 수가 차이가 나는 경향이 있다
javascript를 이용한 노드js 개발자가 (한국에서도) 점점 느는 추세이고 관련 오픈소스가 많아 주니어 개발자도 잘 성장할 수 있다

2. 스프링은 "토비스프링" 등 프레임워크의 사상, 구조를 잘 알 수 있는 서적들이 있는데, 노드도 이런 서적이 있을까요?

 * 자바스크립트 관련서적은 '자바스크립트 핵심 가이드' 추천
http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&mallGb=KOR&barcode=9788979145984


3. 튜터님은 노드와 스프링 중 어떤 기술이 취업전선에 유리하다고 생각하시나요?(신입기준)

 * 한국에서는 아직 java가 유리
하지만, 자바스크립트는 프론트와 백엔드를 같이 할 수 있기에 장점이 있음

4. 코딩테스트는 어느 수준으로 준비해야 하나요?

 * 실제 문제를 해결할 수 있는 정도의 코딩 (현실적 코딩)
한 문제를 제대로 풀 수 있는 능력 (깊은 이해와 응용)

5. 자바스크립트의 장점과 단점

 * 단점 : 자바스크립트 API가 덜 안정적이다, 개떡같이 짜도 개떡같이 돌아간다
장점 : 개떡같이 짜도 개떡같이 돌아간다 (겉으로만)

6. 타입스크립트도 커리큘럼에 포함되어있나요?

 * 자바스크립트와 달리 타입스크립트가 어렵기 때문에 (type과 제약발생) 커리큘럼 내에 배우기 어려움
타입스크립트는 실행 시 어차피 자바스크립트로 돌아가고, 자바스크립트가 기반이기에 자바스크립트부터 잘 배우는게 낫다

7. 자바스크립트로 프론트 백엔드 다 가능하면, java나 그 외 다른 언어들은 왜 배우나요?

 * 취향과 방법의 차이

8. Node.js 와 Spring 보통 연봉차이가 있나요?

 * 요즘은 언어에 따른 연봉차이는 별로 없는 듯 함

9. 백엔드 개발자는 현업에서 프론트엔드의 숙련도는 얼마나 필요한지 궁금합니다.

 * 프론트엔드에 대한 이해가 기본적으로 있어야한다.
최소한 구현하는 프론트엔드의 기능을 구현할 수 있는 정도


******* react는 프론트엔드의 라이브러리 (자바스크립트 언어사용) *******


10. 비전공자 입장에서 백엔드가 프론트엔드보다 진입장벽이 높을까요?

 * 사람바이 사람

11. Node.js가 주로 사용되는 분야하고 Spring이 주로 사용되는 분야가 나누어져 있나요?

 * 그렇지는 않지만, 한국에선 특별하게 은행권에서 java의 Spring이 많이 쓰임 (안정성이 높다)

12. 항해에서 Spring을 배우다가 node.js쓰는 스타트업을 지원해도 가능성이 있는지 채용담당자 입장에서 듣고 싶습니다.

 * 상관없을 듯 하다. 배운것과 상관없이 좋은 개발자가 되는 것이 중요하다

13. 백엔드 개발자 커리큘럼을 진행하기 전에 알아야 할 기본 지식이 있다면?

 * 서버, 네트워크, 데이터베이스에 대한 지식

14. 자바스크립트는 비동기이고 (절차지향이 아님) 객체 지향처럼 설계는 할 수 있지만 (객체지향도 아니다)

15. 커리큘럼에 DB 설계를 포함되지 않음 - ORM을 활용한 DB서버 관리

16. 백엔드 개발자의 고충

 * 사용자가 미개해서 힘듦, 서버를 셧다운 할 수 없어서 힘듦 (데이터 유실)

17. 좋은 개발자란?

 *** 같이 일하고 싶은 개발자, 실력(문제 해결능력)과 꼼꼼함이 있어 든든한 개발자 + 의사소통