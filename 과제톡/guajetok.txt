* = next

1.
인사*
2.
일단 코드부터 보여드리면, 교재의 풀이 2와 똑같습니다
풀이 2는 "가지치기로 필요한 노드 탐색하는 방법"인데요
이 방법이 Binary Search Tree를 가장 잘 활용하는 것 같아 이 방법으로 풀게 되었습니다

여기 코드와 주석이 있는데 아래에서 다시 설명 할 예정이니 넘어가도록 하겠습니다*

3.
책에 있는 예시가 재귀의 과정을 설명하기엔 부족한 것 같아,
높이가 3인 이진 탐색 트리로 설명을 하겠습니다
책에서는 L, R인, low값과 high값을 각각 66과 92로 설정했습니다*

4.
보기 편하게 node.left와 low를 초록색 그리고 node.right와 high를 주황색으로... 노란색?
으로 표현할 것이고, 알고리즘을 사용하지 않고 손으로 문제를 풀어본다면
아래와 같이 답이 403이 나오는 것을 확인하실 수 있습니다*

여기서 파란색 박스의 왼편과 오른편의 노드들을 굳이 확인해 볼 필요가 없다는 것을 직관적으로 아실 수 있는데,
이를 코드로 나타내면 이렇게 (읽기) 표현할 수 있습니다*

5.
root 노드부터 탐색이 시작되기 때문에, 값이 90인 노드부터 확인 해보겠습니다*
90은 low와 high의 사이의 값이기 때문에 아까의 이 코드를 적용할 것인데,
복잡하기 때문에 쉽게 풀어서 진행하겠습니다* - 쉽게 풀면 (이렇게) 표현을 할 수 있습니다*

6.
그렇게 되면, 이렇게 노드의 값 90과 재귀(왼) 재귀(오)를 더해준 값이 정답이 될텐데,
아직 재귀함수가 end point에 다다르지 못했으므로 계속 진행을 해보겠습니다**

7.
재귀(왼) 부터 확인 해 볼 것 인데, 노드의 값이 50이므로 아까의 코드 중 *이 코드를 적용받게 됩니다
이 코드도 앞으로 쉽게 풀어 표현하도록 하겠습니다, 아까 파란색 박스를 통해 직관적으로 파악한 그 방법입니다*
50이 low보다 작기 때문에 재귀(왼)은 제외하고, 재귀(오)만 확인하도록 하겠습니다*

8.
75는 low와 high의 사잇값이므로, 다시 * 이 코드를 적용받게 됩니다
재귀함수는 이 두가지 방식으로 반복되게 되는데**, 마지막 leaf 노드에 도달하면,
node.left 와 right 값이 None이기 때문에,* 아까 이 코드를 적용받게 되어서 0을 반환하게 됩니다*
실제 노드들은 아니지만 편의상 값들을 그려봤습니다

9.
결과적으로 * 리프 노드들의 값은 이렇게 * 반환이 되고, 이에 따라서 부모 노드의 값은 * 이렇게 나오게 됩니다

10.
이렇게 * root노드의 왼쪽 재귀 함수가 반환이 되었는데요, 오른쪽 재귀 함수도 같은 원리**로 92가 반환되고
*결과값이 계산한 값과 일치하게 나오는 것을 확인 할 수 있습니다*

11.
리트 코드에 해당 풀이를 제출 해 본 결과, 꽤나 좋은 결과가 나온 것을 알 수 있는데요,
이는 이진 탐색 트리의 원리를 이용해서 백 트래킹을 한 결과라고 생각됩니다

ps.
알고리즘 공부를 하다가 ppt를 만들다보니, 재미가 붙어서ㅎㅎ...
과하게 시간을 투자하긴 했는데, 이왕 열심히 만든 김에, 이 ppt가 이진 트리 뿐 아니라
재귀함수에 대한 동기님들의 전반적인 이해에 도움이 되셨으면 뿌듯할 것 같습니다